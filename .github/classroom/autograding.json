{
  "tests": [
    {
      "name": "Creation nombre complexe",
      "setup": "pip install numpy matplotlib tqdm nose2;",
      "run": "nose2 -s tests test_nombrecomplexe.Test_NombreComplexe.test_creation",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Module nombre complexe",
      "setup": "",
      "run": "nose2 -s tests test_nombrecomplexe.Test_NombreComplexe.test_module ",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Somme (1/2)",
      "setup": "",
      "run": "nose2 -s tests test_nombrecomplexe.Test_NombreComplexe.test_somme1",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Somme (2/2)",
      "setup": "",
      "run": "nose2 -s tests test_nombrecomplexe.Test_NombreComplexe.test_somme2",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Soustraction (2/2)",
      "setup": "",
      "run": "nose2 -s tests test_nombrecomplexe.Test_NombreComplexe.test_sub1",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Produit (1/2)",
      "setup": "",
      "run": "nose2 -s tests test_nombrecomplexe.Test_NombreComplexe.test_prod1",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Produit (2/2)",
      "setup": "",
      "run": "nose2 -s tests test_nombrecomplexe.Test_NombreComplexe.test_prod2",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Puissance (1/2)",
      "setup": "",
      "run": "nose2 -s tests test_nombrecomplexe.Test_NombreComplexe.test_power0",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Puissance (2/2)",
      "setup": "",
      "run": "nose2 -s tests test_nombrecomplexe.Test_NombreComplexe.test_power2",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Str (1/3)",
      "setup": "",
      "run": "nose2 -s tests test_nombrecomplexe.Test_NombreComplexe.test_str0",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Str (2/3)",
      "setup": "",
      "run": "nose2 -s tests test_nombrecomplexe.Test_NombreComplexe.test_str1",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Str (3/3)",
      "setup": "",
      "run": "nose2 -s tests test_nombrecomplexe.Test_NombreComplexe.test_str2",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Teste fonction nombre_complexe haut gauche",
      "setup": "",
      "run": "nose2 -s tests test_grille.Test_nombre_complexe.test_nombre_complexe_leftup",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Test fonction nombre_complexe bas gauche",
      "setup": "",
      "run": "nose2 -s tests test_grille.Test_nombre_complexe.test_nombre_complexe_leftdown",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Test fonction nombre_complexe bas droite",
      "setup": "",
      "run": "nose2 -s tests test_grille.Test_nombre_complexe.test_nombre_complexe_rightdown",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Test fonction nombre_complexe haut droite",
      "setup": "",
      "run": "nose2 -s tests test_grille.Test_nombre_complexe.test_nombre_complexe_rightup",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Teste type de la grille est bien list",
      "setup": "",
      "run": "nose2 -s tests test_grille.test_grille_complexe.test_type",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Teste si la grille est bien de la bonne taille",
      "setup": "",
      "run": "nose2 -s tests test_grille.test_grille_complexe.test_size",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Teste si les nombres aux extrémités de la grille sont bien ceux attendus (1/2)",
      "setup": "",
      "run": "nose2 -s tests test_grille.test_grille_complexe.test_borders_equal_size",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Teste si les nombres aux extrémités de la grille sont bien ceux attendus (2/2)",
      "setup": "",
      "run": "nose2 -s tests test_grille.test_grille_complexe.test_borders_different_size",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Teste pour la grille si la partie réelle de la grille augmente bien de gauche à droite.",
      "setup": "",
      "run": "nose2 -s tests test_grille.test_grille_complexe.test_increasing_realfromleft",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Teste pour la grille si la partie imaginaire de la grille diminue bien de haut en bas.",
      "setup": "",
      "run": "nose2 -s tests test_grille.test_grille_complexe.test_decreasing_imagfromup",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Teste fonction nombre_complexe haut gauche numpy",
      "setup": "",
      "run": "nose2 -s tests test_grille.Test_nombre_complexe_numpy.test_nombre_complexe_leftup",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Test fonction nombre_complexe bas gauche numpy",
      "setup": "",
      "run": "nose2 -s tests test_grille.Test_nombre_complexe_numpy.test_nombre_complexe_leftdown",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Test fonction nombre_complexe bas droite numpy",
      "setup": "",
      "run": "nose2 -s tests test_grille.Test_nombre_complexe_numpy.test_nombre_complexe_rightdown",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Test fonction nombre_complexe haut droit numpy",
      "setup": "",
      "run": "nose2 -s tests test_grille.Test_nombre_complexe_numpy.test_nombre_complexe_rightup",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Test si le type de la grille numpy est bien ndarray",
      "setup": "",
      "run": "nose2 -s tests test_grille.test_grille_complexe_numpy.test_type",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Teste si la grille numpy est bien de la bonne taille",
      "setup": "",
      "run": "nose2 -s tests test_grille.test_grille_complexe_numpy.test_size",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Teste si les nombres aux extrémités de la grille numpy sont bien ceux attendus (1/2)",
      "setup": "",
      "run": "nose2 -s tests test_grille.test_grille_complexe_numpy.test_borders_equal_size",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Teste si les nombres aux extrémités de la grille numpy sont bien ceux attendus (2/2)",
      "setup": "",
      "run": "nose2 -s tests test_grille.test_grille_complexe_numpy.test_borders_different_size",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Teste pour la grille si la partie réelle de la grille numpy augmente bien de gauche à droite.",
      "setup": "",
      "run": "nose2 -s tests test_grille.test_grille_complexe_numpy.test_increasing_realfromleft",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Teste pour la grille numpy si la partie imaginaire de la grille numpy diminue bien de haut en bas.",
      "setup": "",
      "run": "nose2 -s tests test_grille.test_grille_complexe_numpy.test_decreasing_imagfromup",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Teste si est_divergente renvoie faux pour un petit nombre.",
      "setup": "",
      "run": "nose2 -s tests test_mandelbrot_suite.test_est_divergente.test_convergence_small_c",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Teste si est_divergente renvoie vrai pour un grand nombre.",
      "setup": "",
      "run": "nose2 -s tests test_mandelbrot_suite.test_est_divergente.test_divergence_big_c",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Teste nombre_iterations pour un cas avec N iterations.",
      "setup": "",
      "run": "nose2 -s tests test_mandelbrot_suite.test_nombre_iterations.test_iterations_zero",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Teste nombre_iterations pour un cas avec 0 iterations.",
      "setup": "",
      "run": "nose2 -s tests test_mandelbrot_suite.test_nombre_iterations.test_iterations_big",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Teste nombre_iterations pour un cas avec 342 iterations.",
      "setup": "",
      "run": "nose2 -s tests test_mandelbrot_suite.test_nombre_iterations.test_iterations_medium",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Teste si l'image mandebrot est bien créee.",
      "setup": "",
      "run": "nose2 -s tests test_mandelbrot_suite.test_image_mandelbrot.test_image_mandelbrot",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Teste si l'image mandebrot couleur est bien créee.",
      "setup": "",
      "run": "nose2 -s tests test_mandelbrot_suite.test_image_mandelbrot.test_image_mandelbrot_couleur",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "Teste si l'image mandebrot numpy couleur est bien créee.",
      "setup": "",
      "run": "nose2 -s tests test_mandelbrot_suite.test_image_mandelbrot.test_image_mandelbrot_numpy_couleur",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": 1
    }
  ]
}